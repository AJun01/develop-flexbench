"use strict";(self.webpackChunkflexbench=self.webpackChunkflexbench||[]).push([[641],{5680:(n,e,a)=>{a.d(e,{xA:()=>y,yg:()=>g});var i=a(6540);function o(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}function t(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,i)}return a}function r(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?t(Object(a),!0).forEach((function(e){o(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function l(n,e){if(null==n)return{};var a,i,o=function(n,e){if(null==n)return{};var a,i,o={},t=Object.keys(n);for(i=0;i<t.length;i++)a=t[i],e.indexOf(a)>=0||(o[a]=n[a]);return o}(n,e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);for(i=0;i<t.length;i++)a=t[i],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(o[a]=n[a])}return o}var s=i.createContext({}),m=function(n){var e=i.useContext(s),a=e;return n&&(a="function"==typeof n?n(e):r(r({},e),n)),a},y=function(n){var e=m(n.components);return i.createElement(s.Provider,{value:e},n.children)},u="mdxType",p={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(n,e){var a=n.components,o=n.mdxType,t=n.originalType,s=n.parentName,y=l(n,["components","mdxType","originalType","parentName"]),u=m(a),d=o,g=u["".concat(s,".").concat(d)]||u[d]||p[d]||t;return a?i.createElement(g,r(r({ref:e},y),{},{components:a})):i.createElement(g,r({ref:e},y))}));function g(n,e){var a=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var t=a.length,r=new Array(t);r[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l[u]="string"==typeof n?n:o,r[1]=l;for(var m=2;m<t;m++)r[m]=a[m];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},669:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>m});var i=a(8168),o=(a(6540),a(5680));const t={},r="Anonymization",l={unversionedId:"GSoC/2024/Anonymization/README",id:"GSoC/2024/Anonymization/README",title:"Anonymization",description:"Overview",source:"@site/docs/GSoC/2024/Anonymization/README.md",sourceDirName:"GSoC/2024/Anonymization",slug:"/GSoC/2024/Anonymization/",permalink:"/develop-flexbench/docs/GSoC/2024/Anonymization/",draft:!1,editUrl:"https://github.com/AJun01/develop-flexbench/docs/GSoC/2024/Anonymization/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2024",permalink:"/develop-flexbench/docs/GSoC/2024/"},next:{title:"Anonymization-Feature-Report",permalink:"/develop-flexbench/docs/GSoC/2024/Anonymization/Anonymization-Feature-Report"}},s={},m=[{value:"Overview",id:"overview",level:2},{value:"File Involved",id:"file-involved",level:2},{value:"Features",id:"features",level:2},{value:"Structure",id:"structure",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Enabling/Disabling Anonymization",id:"enablingdisabling-anonymization",level:3},{value:"Anonymizing Different Data Formats",id:"anonymizing-different-data-formats",level:3},{value:"Anonymizing Text",id:"anonymizing-text",level:4},{value:"Anonymizing URL-encoded Strings",id:"anonymizing-url-encoded-strings",level:4},{value:"Anonymizing JSON Objects",id:"anonymizing-json-objects",level:4},{value:"Anonymizing HTML Content",id:"anonymizing-html-content",level:4},{value:"Anonymizing Multipart Form Data",id:"anonymizing-multipart-form-data",level:4},{value:"Anonymizing HTTP Requests and Responses",id:"anonymizing-http-requests-and-responses",level:3},{value:"Anonymizing HTTP Requests",id:"anonymizing-http-requests",level:4},{value:"Anonymizing HTTP Responses",id:"anonymizing-http-responses",level:4},{value:"Configuration(Manual Mode)",id:"configurationmanual-mode",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"License",id:"license",level:2}],y={toc:m},u="wrapper";function p(n){let{components:e,...a}=n;return(0,o.yg)(u,(0,i.A)({},y,a,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"anonymization"},"Anonymization"),(0,o.yg)("h2",{id:"overview"},"Overview"),(0,o.yg)("p",null,"The Anonymizer Library is a Node.js module designed to anonymize sensitive information in various types of data, including JSON objects, URL-encoded strings, HTML content, and multipart form data. The library supports different types of data formats and allows customization of anonymization rules to suit specific needs."),(0,o.yg)("h2",{id:"file-involved"},"File Involved"),(0,o.yg)("p",null,"  anonymizer.js"),(0,o.yg)("p",null,"  anonymizerConfig.js"),(0,o.yg)("p",null,"  main.js"),(0,o.yg)("h2",{id:"features"},"Features"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Email Anonymization"),": Replaces email addresses with a generic anonymized email."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Name Anonymization"),": Supports full name and single name anonymization."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Address Anonymization"),": Replaces street addresses, city names, and other location-specific details with anonymized placeholders."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Phone Number Anonymization"),": Replaces phone numbers with a generic anonymized number."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"URL Anonymization"),": Replaces URLs with a generic anonymized URL."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"State and ZIP Code Anonymization"),": Replaces state abbreviations and ZIP codes with generic placeholders."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Password Anonymization"),": Replaces passwords with a generic anonymized password."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"HTML Content Anonymization"),": Anonymizes HTML content, including headers, paragraphs, and links."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Form Data Anonymization"),": Supports anonymization of multipart form data."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Custom Anonymization Rules"),": Allows users to define custom regex patterns and replacements for specific anonymization needs.")),(0,o.yg)("h2",{id:"structure"},"Structure"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"anonymizer.js\n\u2502\n\u251c\u2500\u2500 Dependencies\n\u2502   \u251c\u2500\u2500 multiparty\n\u2502   \u251c\u2500\u2500 cheerio\n\u2502   \u251c\u2500\u2500 fs\n\u2502   \u251c\u2500\u2500 path\n\u2502\n\u251c\u2500\u2500 Regular Expressions\n\u2502   \u251c\u2500\u2500 emailRegex\n\u2502   \u251c\u2500\u2500 fullNameRegex\n\u2502   \u251c\u2500\u2500 singleNameRegex\n\u2502   \u251c\u2500\u2500 addressRegex\n\u2502   \u251c\u2500\u2500 phoneRegex\n\u2502   \u251c\u2500\u2500 urlRegex\n\u2502   \u251c\u2500\u2500 stateRegex\n\u2502   \u251c\u2500\u2500 zipRegex\n\u2502   \u251c\u2500\u2500 passwordRegex\n\u2502\n\u251c\u2500\u2500 Variables\n\u2502   \u251c\u2500\u2500 anonymizationEnabled (boolean)\n\u2502   \u251c\u2500\u2500 manualMode (boolean) //Important Config file for manual mode\n\u2502   \u251c\u2500\u2500 customAnonymizationRules //Important Config file for manual mode\n\u2502\n\u251c\u2500\u2500 Functions\n\u2502   \u251c\u2500\u2500 anonymizeEmail(text) // email\n\u2502   \u251c\u2500\u2500 anonymizeFullName(text) // full name\n\u2502   \u251c\u2500\u2500 anonymizeSingleName(text) // single name\n\u2502   \u251c\u2500\u2500 anonymizeAddress(text) // address\n\u2502   \u251c\u2500\u2500 anonymizePhone(text) // number\n\u2502   \u251c\u2500\u2500 anonymizeUrl(text) //string in url\n\u2502   \u251c\u2500\u2500 anonymizeState(text) //state\n\u2502   \u251c\u2500\u2500 anonymizeZip(text) //zip\n\u2502   \u251c\u2500\u2500 anonymizePassword(text) //password\n\u2502   \u251c\u2500\u2500 applyManual(text, rules) // config driven\n\u2502   \u251c\u2500\u2500 anonymizeText(text) // string\n\u2502   \u251c\u2500\u2500 anonymizeUrlEncoded(data) //url\n\u2502   \u251c\u2500\u2500 anonymizeObject(obj) // obj\n\u2502   \u251c\u2500\u2500 anonymizeField(key, value) // address(full)\n\u2502   \u251c\u2500\u2500 anonymizeHtml(htmlContent) // html\n\u2502   \u251c\u2500\u2500 anonymizeFormData(req, callback) // form\n\u2502   \u251c\u2500\u2500 anonymizeRequest(options) // https req\n\u2502   \u251c\u2500\u2500 anonymizeResponse(response, cb) // https res\n\u2502   \u251c\u2500\u2500 setAnonymization(flag) // flag setter\n\u2502   \u251c\u2500\u2500 isAnonymizationEnabled() // flag check\n\u2502\n\u2514\u2500\u2500 Module Exports\n    \u251c\u2500\u2500 anonymizeRequest\n    \u251c\u2500\u2500 anonymizeResponse\n    \u251c\u2500\u2500 anonymizeObject\n    \u251c\u2500\u2500 anonymizeFormData\n    \u251c\u2500\u2500 isAnonymizationEnabled\n    \u2514\u2500\u2500 setAnonymization\n")),(0,o.yg)("h2",{id:"installation"},"Installation"),(0,o.yg)("p",null,"To use the Anonymizer Library in your Node.js project, you can set anonymization mode into ",(0,o.yg)("em",{parentName:"p"},"true"),", no install need for anonymization feature."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"//default\nlet anonymizationEnabled = true;\n")),(0,o.yg)("h2",{id:"usage"},"Usage"),(0,o.yg)("h3",{id:"enablingdisabling-anonymization"},"Enabling/Disabling Anonymization"),(0,o.yg)("p",null,"The anonymization process can be enabled or disabled using the following functions:"),(0,o.yg)("p",null,"Standalone Script:"),(0,o.yg)("p",null,"When you creating your script utilizing Flexbench, by importing flexbench, set the anonymization feature via core library"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const trafficSimulator = require('flexbench');\n\n// Enable anonymization\ntrafficSimulator.setAnonymization(true);\n\n// Check if anonymization is enabled\nconsole.log(trafficSimulator.isAnonymizationEnabled()); // true\n")),(0,o.yg)("p",null,"Server-app:"),(0,o.yg)("p",null,"Go to server-app/tests/"),(0,o.yg)("p",null,"Add code below to both multi-requests.js & simple-request.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"// Enable anonymization\ntrafficSimulator.setAnonymization(true);\n//above start\n trafficSimulator.start(threadId);\n")),(0,o.yg)("p",null,"desktop-app:"),(0,o.yg)("p",null,"Go to desktop-app/tests/"),(0,o.yg)("p",null,"Add code below to both multi-requests.js & simple-request.js"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"// Enable anonymization\ntrafficSimulator.setAnonymization(true);\n//above start\n trafficSimulator.start(threadId);\n")),(0,o.yg)("h3",{id:"anonymizing-different-data-formats"},"Anonymizing Different Data Formats"),(0,o.yg)("h4",{id:"anonymizing-text"},"Anonymizing Text"),(0,o.yg)("p",null,"To anonymize a plain text string:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'const anonymizedText = anonymizer.anonymizeText("Yujun Liu lives at 123 Main St.");\nconsole.log(anonymizedText); // Anonymized Name lives at Anonymized Address.\n')),(0,o.yg)("h4",{id:"anonymizing-url-encoded-strings"},"Anonymizing URL-encoded Strings"),(0,o.yg)("p",null,"To anonymize a URL-encoded string:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},'const urlEncodedData = "email.YJ@example.com&name=Yujun+Liu";\nconst anonymizedData = anonymizer.anonymizeUrlEncoded(urlEncodedData);\nconsole.log(anonymizedData); // email=anonymized_email@example.com&name=Anonymized+Name\n')),(0,o.yg)("h4",{id:"anonymizing-json-objects"},"Anonymizing JSON Objects"),(0,o.yg)("p",null,"To anonymize a JSON object:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const jsonObject = {\n    name: \"Yujun Liu\",\n    email: \"YJ@example.com\",\n    address: \"22 bond St, Anytown, USA\"\n};\nconst anonymizedObject = anonymizer.anonymizeObject(jsonObject);\nconsole.log(anonymizedObject);\n// { name: 'Anonymized Name', email: 'anonymized_email@example.com', address: 'Anonymized Address' }\n")),(0,o.yg)("h4",{id:"anonymizing-html-content"},"Anonymizing HTML Content"),(0,o.yg)("p",null,"To anonymize HTML content:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const htmlContent = '<h1>Yujun Liu</h1><p>Email: YujunLiu@example.com</p>';\nconst anonymizedHtml = anonymizer.anonymizeHtml(htmlContent);\nconsole.log(anonymizedHtml); \n// <h1>Anonymized Title</h1><p>Email: anonymized_email@example.com</p>\n")),(0,o.yg)("h4",{id:"anonymizing-multipart-form-data"},"Anonymizing Multipart Form Data"),(0,o.yg)("p",null,"To anonymize multipart form data:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const req = {}; // your HTTP request object\nanonymizer.anonymizeFormData(req, (err, anonymizedData) => {\n    if (err) {\n        console.error('Error anonymizing form data:', err);\n    } else {\n        console.log('Anonymized form data:', anonymizedData);\n    }\n});\n")),(0,o.yg)("h3",{id:"anonymizing-http-requests-and-responses"},"Anonymizing HTTP Requests and Responses"),(0,o.yg)("h4",{id:"anonymizing-http-requests"},"Anonymizing HTTP Requests"),(0,o.yg)("p",null,"To anonymize an HTTP request before sending it:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const options = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ name: 'Yujun Liu', email: 'YujunLiu@example.com' })\n};\n\nconst anonymizedRequestOptions = anonymizer.anonymizeRequest(options);\n")),(0,o.yg)("h4",{id:"anonymizing-http-responses"},"Anonymizing HTTP Responses"),(0,o.yg)("p",null,"To anonymize an HTTP response after receiving it:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-javascript"},"const response = {}; // your HTTP response object\nconst anonymizedResponse = anonymizer.anonymizeResponse(response, (anonymizedResponse) => {\n    console.log('Anonymized response:', anonymizedResponse);\n});\n")),(0,o.yg)("h2",{id:"configurationmanual-mode"},"Configuration(Manual Mode)"),(0,o.yg)("p",null,"The library is designed to work with a configuration file (e.g., ",(0,o.yg)("inlineCode",{parentName:"p"},"anonymizerConfig.json"),") where custom anonymization rules can be specified. The configuration can include:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Custom regex patterns for anonymization"),(0,o.yg)("li",{parentName:"ul"},"Replacement values for specific fields"),(0,o.yg)("li",{parentName:"ul"},"Manual mode for applying specific rules")),(0,o.yg)("h2",{id:"error-handling"},"Error Handling"),(0,o.yg)("p",null,"The library includes error handling to catch and report issues during the anonymization process. Errors are logged to the console, and the original data is returned if anonymization fails."),(0,o.yg)("h2",{id:"license"},"License"),(0,o.yg)("p",null,"This project is licensed under the MIT License. See the ",(0,o.yg)("inlineCode",{parentName:"p"},"LICENSE")," file for details."))}p.isMDXComponent=!0}}]);